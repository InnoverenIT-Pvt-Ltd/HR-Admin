{"version":3,"file":"static/js/573.31472ba3.chunk.js","mappings":"kSAiGA,IAUA,GAAeA,EAAAA,EAAAA,KAVS,SAAH,GAAU,EAAJC,KAAc,EAARC,SAAgB,EAANC,OAAmB,EAAXC,YAAoB,EAARC,SAAQ,MAAQ,CAE/E,CAAC,IAC0B,SAACC,GAAQ,OAClCC,EAAAA,EAAAA,IACE,CAEA,EACAD,EACA,GACJ,EAzFA,SAAoBE,GAMlB,IA+BMC,EAAMC,SAASC,cAAc,8BAEnC,OADoBF,GAAOA,EAAIG,cAE7B,+BAcE,SAAC,KAGC,CACAC,QApDU,CAEd,CACEC,MAAM,YACNC,MAAO,OAGT,CACID,MAAM,WACNC,MAAO,OAGT,CACED,MAAM,WACNC,MAAO,QA6CPC,YAAY,KAYpB,ICMA,IAUA,GAAehB,EAAAA,EAAAA,KAVS,SAAH,GAAU,EAAJC,KAAc,EAARC,SAAgB,EAANC,OAAmB,EAAXC,YAAoB,EAARC,SAAQ,MAAQ,CAE/E,CAAC,IAC0B,SAACC,GAAQ,OAClCC,EAAAA,EAAAA,IACE,CAEA,EACAD,EACA,GACJ,EA7FA,SAAyBE,GAMvB,IAmCMC,EAAMC,SAASC,cAAc,8BAEnC,OADoBF,GAAOA,EAAIG,cAE7B,+BAcE,SAAC,KAGC,CACAC,QAxDU,CAEd,CACEC,MAAM,WACNC,MAAO,OAGT,CACID,MAAM,WACNC,MAAO,OAGT,CACED,MAAM,QACNC,MAAO,OAET,CACED,MAAM,QACNC,MAAO,QA6CPC,YAAY,KAYpB,ICtFMC,EAAUC,EAAAA,GAAAA,QAGf,IACKC,EAAgB,0CACpB,WAAYX,GAAQ,IAAD,EAiBf,OAjBe,gBACjB,cAAMA,IAkBRY,2BAA6B,WAC3B,EAAKC,SAAS,CAAEC,sBAAsB,IAEtCC,QAAQC,IAAI,EAAKC,MAAMC,UACzB,EAAE,EAEFC,mBAAqB,WACnB,EAAKN,SAAS,CAAEO,MAAM,GACxB,EAzBE,EAAKH,MAAQ,CACXI,UAAW,IACXC,gBAAgB,EAChBC,gBAAgB,EAChBC,gBAAgB,EAChBC,oBAAoB,EACpBP,WAAW,EACXQ,cAAc,EACdZ,sBAAsB,EACtBa,eAAgB,GAChBC,aAAc,GACdC,YAAa,GACbC,YAAY,EACZC,OAAQ,GACRX,MAAM,GACN,CACJ,CA6FC,OA7FA,4CAaD,WACEY,KAAKnB,SAAS,CAAEK,WAAW,GAC7B,GAAC,oBAED,WACwBc,KAAKf,MAAnBI,UAmBR,OACE,+BACE,SAAC,KAAW,WACV,UAAC,KAAU,CAACY,iBAAiB,IAAIC,SAAUF,KAAKG,gBAAgB,WAM9D,SAAC1B,EAAO,CACNR,KACE,+BAEE,iBAAMmC,MAAO,CAAEC,WAAY,UAAW,SAAC,YAM1C,UAGD,UAAC,EAAAC,SAAQ,CAACC,SAAU,cAAc,UAC/B,KAED,SAAC,EAAU,QALT,MASN,SAAC9B,EAAO,CACNR,KACE,+BAEE,iBAAMmC,MAAO,CAAEC,WAAY,UAAW,SAAC,WAM1C,UAGD,UAAC,EAAAC,SAAQ,CAACC,SAAU,cAAc,UAC/B,KAED,SAAC,EAAe,QALd,WAgBhB,KAAC,EAhHmB,CAASC,EAAAA,WA6H/B,GAAehD,EAAAA,EAAAA,KAXS,SAAH,GAAU,EAAJC,KAAc,EAARC,SAAiB,EAAP+C,QAAoB,EAAX7C,YAAW,MAAQ,CAEvE,CAAC,IAC0B,SAACE,GAAQ,OAClCC,EAAAA,EAAAA,IACE,CAEA,EACAD,EACA,GAEJ,CAA4Da,E","sources":["Container/Courses/Child/CoursesCard/TopicTable.js","Container/Courses/Child/CoursesCard/CourseTestTable.js","Container/Courses/Child/CoursesCard/CoursesDetailTab.js"],"sourcesContent":["import React, { useEffect, useState, useMemo, lazy } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport styled from 'styled-components';\r\n\r\n\r\nimport moment from \"moment\";\r\n\r\n\r\nimport { StyledTable } from \"../../../../Components/UI/Antd\";\r\nimport { Tooltip,  Button, Input, Select } from \"antd\";\r\n\r\nimport { MultiAvatar, MultiAvatar1, MultiAvatar2, SubTitle } from \"../../../../Components/UI/Elements\";\r\n\r\n\r\n\r\nfunction TopicTable(props) {\r\n \r\n\r\n\r\n  \r\n  \r\n  const columns = [\r\n  \r\n    {\r\n      title:\"TopicName\",\r\n      width: \"15%\",\r\n    },\r\n\r\n    {\r\n        title:\"Duration\",\r\n        width: \"15%\",\r\n      },\r\n\r\n      {\r\n        title:\"Download\",\r\n        width: \"15%\",\r\n      },\r\n\r\n\r\n    //   {\r\n    //     title:\"Date\",\r\n    //     width: \"15%\",\r\n    //   },\r\n  \r\n  \r\n  \r\n\r\n   \r\n\r\n\r\n  ];\r\n \r\n  const tab = document.querySelector(\".ant-layout-sider-children\");\r\n  const tableHeight = tab && tab.offsetHeight * 0.75;\r\n  return (\r\n    <>\r\n  \r\n         {/* <InfiniteScroll\r\n                dataLength={props.customerByUserId.length}\r\n                next={handleLoadMore}\r\n                hasMore={true}\r\n                // loader={<h4 style={{ textAlign: 'center' }}>Loading...</h4>}\r\n                endMessage={\r\n                    <p style={{ textAlign: 'center' }}>\r\n                        <b>Yay! You have seen it all</b>\r\n                    </p>\r\n                }\r\n                height={600}\r\n            > */}\r\n      <StyledTable\r\n        // rowKey=\"accountId\"\r\n        // rowSelection={rowSelection}\r\n        // rowKey={(record) => record.customerId}\r\n        columns={columns}\r\n        // dataSource={customerByUserId}\r\n        // loading={fetchingCustomers || fetchingCustomersError || fetchingAllCustomers}\r\n        // scroll={{ y: 500 }}\r\n        // pagination={false\r\n        //scroll={{ y: tableHeight }}\r\n\r\n        pagination={false}\r\n      // defaultPageSize: 15,\r\n      // showSizeChanger: true,\r\n      // pageSizeOptions: [\"15\", \"25\", \"40\", \"50\"],\r\n\r\n      />\r\n     \r\n       \r\n\r\n   \r\n    </>\r\n  );\r\n}\r\n// }\r\nconst mapStateToProps = ({ auth, customer, sector, opportunity,employee }) => ({\r\n\r\n});\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n    \r\n    },\r\n    dispatch\r\n  );\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicTable);\r\n","import React, { useEffect, useState, useMemo, lazy } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport styled from 'styled-components';\r\n\r\n\r\nimport moment from \"moment\";\r\n\r\n\r\nimport { StyledTable } from \"../../../../Components/UI/Antd\";\r\nimport { Tooltip,  Button, Input, Select } from \"antd\";\r\n\r\nimport { MultiAvatar, MultiAvatar1, MultiAvatar2, SubTitle } from \"../../../../Components/UI/Elements\";\r\n\r\n\r\n\r\nfunction CourseTestTable(props) {\r\n \r\n\r\n\r\n  \r\n  \r\n  const columns = [\r\n  \r\n    {\r\n      title:\"TestName\",\r\n      width: \"15%\",\r\n    },\r\n\r\n    {\r\n        title:\"TestDate\",\r\n        width: \"15%\",\r\n      },\r\n\r\n      {\r\n        title:\"Level\",\r\n        width: \"15%\",\r\n      },\r\n      {\r\n        title:\"Score\",\r\n        width: \"15%\",\r\n      },\r\n\r\n\r\n    //   {\r\n    //     title:\"Date\",\r\n    //     width: \"15%\",\r\n    //   },\r\n  \r\n  \r\n  \r\n\r\n   \r\n\r\n\r\n  ];\r\n \r\n  const tab = document.querySelector(\".ant-layout-sider-children\");\r\n  const tableHeight = tab && tab.offsetHeight * 0.75;\r\n  return (\r\n    <>\r\n  \r\n         {/* <InfiniteScroll\r\n                dataLength={props.customerByUserId.length}\r\n                next={handleLoadMore}\r\n                hasMore={true}\r\n                // loader={<h4 style={{ textAlign: 'center' }}>Loading...</h4>}\r\n                endMessage={\r\n                    <p style={{ textAlign: 'center' }}>\r\n                        <b>Yay! You have seen it all</b>\r\n                    </p>\r\n                }\r\n                height={600}\r\n            > */}\r\n      <StyledTable\r\n        // rowKey=\"accountId\"\r\n        // rowSelection={rowSelection}\r\n        // rowKey={(record) => record.customerId}\r\n        columns={columns}\r\n        // dataSource={customerByUserId}\r\n        // loading={fetchingCustomers || fetchingCustomersError || fetchingAllCustomers}\r\n        // scroll={{ y: 500 }}\r\n        // pagination={false\r\n        //scroll={{ y: tableHeight }}\r\n\r\n        pagination={false}\r\n      // defaultPageSize: 15,\r\n      // showSizeChanger: true,\r\n      // pageSizeOptions: [\"15\", \"25\", \"40\", \"50\"],\r\n\r\n      />\r\n     \r\n       \r\n\r\n   \r\n    </>\r\n  );\r\n}\r\n// }\r\nconst mapStateToProps = ({ auth, customer, sector, opportunity,employee }) => ({\r\n\r\n});\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n    \r\n    },\r\n    dispatch\r\n  );\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseTestTable);\r\n","import React, { Component, lazy, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Icon, Tooltip } from \"antd\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { StyledTabs } from \"../../../../Components/UI/Antd\";\r\nimport { TabsWrapper } from \"../../../../Components/UI/Layout\";\r\nimport { ActionIcon } from \"../../../../Components/Utils\";\r\nimport { File } from \"../../../../Components/Utils\";\r\nimport TopicTable from \"./TopicTable\";\r\nimport CourseTestTable from \"./CourseTestTable\";\r\n\r\nconst TabPane = StyledTabs.TabPane;\r\nfunction handleRefreshPage() {\r\n  window.location.reload();\r\n}\r\nclass CoursesDetailTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeKey: \"1\",\r\n      contactPopover: false,\r\n      partnerPopover: false,\r\n      quotProPopover: false,\r\n      deliveryProPopover: false,\r\n      breadCumb: false,\r\n      visibleModal: false,\r\n      recriutmentdashboard: false,\r\n      currentTabName: \"\",\r\n      currentTabId: \"\",\r\n      customField: [],\r\n      ganttChart: false,\r\n      costId: \"\",\r\n      file: false,\r\n    };\r\n  }\r\n  handleRecriutmentdashboard = () => {\r\n    this.setState({ recriutmentdashboard: true });\r\n\r\n    console.log(this.state.breadCumb);\r\n  };\r\n\r\n  handleRecruitClick = () => {\r\n    this.setState({ file: true });\r\n  };\r\n\r\n \r\n\r\n  componentWillUnmount() {\r\n    this.setState({ breadCumb: false });\r\n  }\r\n \r\n  render() {\r\n    const { activeKey } = this.state;\r\n    // const {\r\n    //   customer: { customerId, name },\r\n    //   handleDocumentUploadModal,\r\n    //   documentUploadModal,\r\n    //   handleCustomerReactSpeechModal,\r\n    //   addCustomerSpeechModal,\r\n    //   handleCustomerContactModal,\r\n    //   // ComhandleCustomermercialsModal,\r\n    //   addCustomerContactModal,\r\n    //   handleCustomerOpportunityModal,\r\n    //   addCustomerOpportunityModal,\r\n    //   getContactListByCustomerId,\r\n    //   getOpportunityListByCustomerId,\r\n    //   handleTagProfileModal,\r\n    //   addInvoiceModal,\r\n    //   handleInvoiceModal,\r\n    // } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <TabsWrapper>\r\n          <StyledTabs defaultActiveKey=\"1\" onChange={this.handleTabChange}>\r\n            \r\n           \r\n           \r\n           \r\n\r\n            <TabPane\r\n              tab={\r\n                <>\r\n                \r\n                  <span style={{ marginLeft: \"0.25em\" }}>\r\n               \r\n                  Topic\r\n                  </span>\r\n                 \r\n                </>\r\n              }\r\n              key=\"1\"\r\n            >\r\n              <Suspense fallback={\"Loading ...\"}>\r\n                {\" \"}\r\n                {/* <LinkedDocuments /> */}\r\n                <TopicTable/>\r\n              </Suspense>\r\n            </TabPane>\r\n\r\n            <TabPane\r\n              tab={\r\n                <>\r\n                \r\n                  <span style={{ marginLeft: \"0.25em\" }}>\r\n               \r\n                  Test\r\n                  </span>\r\n                 \r\n                </>\r\n              }\r\n              key=\"2\"\r\n            >\r\n              <Suspense fallback={\"Loading ...\"}>\r\n                {\" \"}\r\n                {/* <LinkedDocuments /> */}\r\n                <CourseTestTable/>\r\n              </Suspense>\r\n            </TabPane>\r\n           \r\n           \r\n           \r\n          </StyledTabs>\r\n        </TabsWrapper>\r\n      \r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ auth, customer, contact, opportunity }) => ({\r\n\r\n});\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n    \r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CoursesDetailTab);\r\n"],"names":["connect","auth","customer","sector","opportunity","employee","dispatch","bindActionCreators","props","tab","document","querySelector","offsetHeight","columns","title","width","pagination","TabPane","StyledTabs","CoursesDetailTab","handleRecriutmentdashboard","setState","recriutmentdashboard","console","log","state","breadCumb","handleRecruitClick","file","activeKey","contactPopover","partnerPopover","quotProPopover","deliveryProPopover","visibleModal","currentTabName","currentTabId","customField","ganttChart","costId","this","defaultActiveKey","onChange","handleTabChange","style","marginLeft","Suspense","fallback","Component","contact"],"sourceRoot":""}